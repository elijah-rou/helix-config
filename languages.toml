[language-server.rust-analyzer]
command = "rust-analyzer"
[language-server.rust-analyzer.config.check]
command = "clippy"
[language-server.rust-analyzer.config.cargo]
features = "all"
[[language]]
name = "rust"
auto-format = true
language-servers = [ { name = "rust-analyzer"} ]


[language-server.sql-language-server]
command = "sql-language-server"
args = ["up", "--method", "stdio"]
[[language]]
name = "sql"
language-servers = [ "sql-language-server" ]


[language-server.elixir-ls]
command = "elixir-ls"
[[language]]
name = "elixir"
auto-format = true
language-servers = [ { name = "elixir-ls"} ]


[language-server.gleam-lsp]
command = "gleam"
args = ["lsp"]
[[language]]
name = "gleam"
auto-format = true
language-servers = [ { name = "gleam-ls"} ]


[language-server.gopls]
command = "gopls"
[[language]]
name = "go"
auto-format = true
formatter = { command = "goimports" }
language-servers = [ "gopls" ]


[language-server.zls]
command = "zls"
[[language]]
name = "zig"
auto-format = true
language-servers = [ { name = "zls"} ]


[language-server.helm-ls]
command = "helm-ls"
[[language]]
name = "helm"
auto-format = true
language-servers = [ { name = "helm-ls"} ]


[[grammar]]
name = "terraform"
source = {git = "https://github.com/tree-sitter-grammars/tree-sitter-hcl", rev="HEAD"}
[language-server.terraform-ls]
command = "terraform-ls"
args = ["serve", "-log-file", "/dev/null"]
[[language]]
name = "hcl"
auto-format = true
language-servers = [ { name = "terraform-ls"} ]
language-id = "terraform"
[[language]]
name = "tfvars"
auto-format = true
language-servers = [ { name = "terraform-ls"} ]
language-id = "terraform-vars"


[language-server.clojure-lsp]
command = "clojure-lsp"
[[language]]
name = "clojure"
auto-format = true
# formatter = { command = "cljfmt", args = ["fix"]}
language-servers = [ { name = "clojure-ls"} ]


[language-server.pyright]
command = "basedpyright"
[language-server.ruff]
command = "ruff-lsp"
[language-server.ruff.config.settings]
args = ["--ignore", "E501"]
[[language]]
name = "python"
auto-format = true
formatter = { command = "black" }
language-servers = [ "pyright", "ruff" ]


[language-server.typescript-ls]
command = "bintypescript-language-server"
[[language]]
name = "typescript"
auto-format = true
language-servers = [ { name = "typescript-ls"} ]


[language-server.bash-ls]
command = "bash-language-server"
[[language]]
name = "bash"
shebangs = ["bash"]
auto-format = true
language-servers = [ { name = "bash-ls"} ]


[language-server.dockerfile-ls]
command = "dockerfile-language-server"
[[language]]
name = "dockerfile"
auto-format = true
language-servers = [ { name = "dockerfile-ls"} ]


[language-server.json-ls]
command = "vscode-json-language-server"
[[language]]
name = "json"
auto-format = true
language-servers = [ { name = "json-ls"} ]


[language-server.ocamllsp]
command = "ocamllsp"
[[language]]
name = "ocaml"
auto-format = true
language-servers = [ { name = "ocamllsp"} ]


[language-server.yaml-ls]
command = "yaml-language-server"
[language-server.yaml-ls.config.yaml]
format = { enable = true }
validation = true
[[language]]
name = "yaml"
auto-format = true
language-servers = [ { name = "yaml-ls"} ]


[language-server.marksman]
command = "marksman"
[[language]]
name = "markdown"
auto-format = true
language-servers = ["marksman"]


[[language]]
name = "toml"
formatter = { command = "taplo", args = ["fmt", "-"] }


[language-server.texlab.config.texlab.build]
onSave = true
